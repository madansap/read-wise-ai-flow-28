Integrating AI UX Patterns into a Reading Companion Application
1. Introduction
Artificial intelligence is increasingly shaping the landscape of digital products, offering new avenues for enhancing user experiences and functionalities. The "Designer's Guide to Building AI Products," presented by Shape of AI, provides a valuable framework for navigating this evolving technological paradigm.1 This guide emphasizes the critical role of user experience (UX) patterns in designing effective AI-powered applications. While AI introduces novel ways for users to interact with technology, the fundamental principles of good design remain paramount in ensuring user satisfaction and product success.1 The guide offers a practical, building-block approach by categorizing common design challenges in AI and providing reusable solutions in the form of UX patterns.
This report aims to explore how the AI UX patterns outlined in the Shape of AI guide can be strategically integrated into a reading companion application. The goal is to identify opportunities where AI can enhance the user's reading and learning experience. It is important to note that the guide does not include a dedicated section specifically addressing the integration of AI into existing applications.1 Therefore, this report will analyze the applicability of the general UX patterns presented in the guide to the specific context of a reading companion. This necessitates a critical evaluation of how these patterns can be adapted and implemented to address the unique needs and workflows of readers. The absence of a prescriptive integration section in the guide suggests that the patterns are intended to be versatile and adaptable across various applications, requiring designers to carefully consider their specific use case and user context.
2. Understanding the Reading Companion Context
A reading companion application typically offers a range of functionalities designed to support and enhance the reading process. These features often include e-book reading capabilities, tools for note-taking and highlighting, bookmarking features for easy navigation, dictionary lookups for understanding unfamiliar words, and progress tracking to monitor reading habits. Users often turn to reading companions to facilitate learning, comprehension, and engagement with digital texts.
However, readers may encounter several challenges and pain points. Understanding complex concepts can be difficult, requiring additional resources or explanations. Summarizing key information and remembering important details from lengthy texts can be time-consuming and effortful. Maintaining engagement and overcoming reading fatigue are also common hurdles. Furthermore, efficiently finding specific information or connecting different ideas within a text can be a challenge. By understanding these existing user workflows and difficulties, it becomes possible to identify specific areas where the integration of AI can provide meaningful value. AI features should aim to directly address these pain points and enhance the existing reading experience in a way that feels natural and intuitive to the user.
3. Applying AI UX Patterns to a Reading Companion
The "Designer's Guide to Building AI Products" categorizes UX patterns into seven key areas, each addressing a different aspect of user interaction with AI.1 These categories provide a structured framework for considering how AI can be thoughtfully integrated into a reading companion.
3.1. Wayfinders
Wayfinder patterns are crucial for guiding users on how to interact with AI, particularly when they are new to such features.1 These patterns provide clues and support to help users understand the AI's capabilities and how to effectively utilize them.
Nudges: These patterns involve alerting users to potential AI actions they can take.1 In a reading companion, nudges could be implemented in various ways. For instance, after a user has been reading a long chapter for a significant amount of time, a gentle suggestion could appear, offering an AI-powered summarization of the content. Similarly, a button or icon that activates an AI feature relevant to the current page, such as "Explain this concept," could be subtly highlighted to draw the user's attention. The effectiveness of these nudges lies in their context-awareness and non-intrusiveness. They should appear at relevant moments within the user's reading journey, offering genuine assistance rather than causing distraction. Overly aggressive or poorly timed nudges could be counterproductive and annoy users. The key is to anticipate user needs based on their reading behavior and offer timely, helpful suggestions.
Suggestions: This category focuses on providing prompts or ideas to help users overcome the "blank canvas" problem when interacting with AI.1 In a reading companion, when a user highlights a section of text, the application could suggest prompts like "Summarize this," "Explain the main argument," or "Find related information." Similarly, when a user opens an AI-powered feature for the first time, a list of potential actions could be presented, such as "Try asking me to summarize this chapter," or "What are the key themes?" Providing such relevant suggestions can significantly lower the barrier to entry for using AI features. Users might not always be aware of the full capabilities of the AI or know how to formulate effective prompts. Offering examples can spark their imagination and clearly demonstrate the value and utility of the AI integration.
Follow up: This pattern involves prompting the user for more information when their initial request is unclear.1 Natural language interactions can sometimes be ambiguous, and the AI needs to be equipped to handle such situations gracefully. For example, if a user asks the AI to "explain," but it's unclear which part of the text they are referring to, the AI could respond with a clarifying question like, "Could you please specify which part you'd like me to explain further?" Implementing effective follow-up mechanisms is crucial for natural language interactions within a reading companion. This ensures that the AI can accurately understand and respond to user requests, even if they are initially ambiguous or lack sufficient detail.
Templates: Templates provide structured formats that users can fill or that the AI can pre-fill.1 In the context of a reading companion, templates could be useful for more complex AI interactions. For instance, the application could offer templates for creating AI-assisted summaries, such as "Summarize focusing on [key theme]" or "Create a summary for [target audience]." Similarly, a template could be provided for asking the AI to analyze the sentiment of a particular passage, with fields for specifying the passage and the desired type of sentiment analysis. These templates can provide structure and guidance for users who may not be familiar with crafting detailed prompts, making sophisticated AI functionalities more accessible. They essentially offer a scaffold that helps users get the desired results without needing advanced prompting knowledge.
3.2. Inputs
Input patterns address how users submit their prompts to the AI, taking into account the surrounding context of their interaction.1 These patterns aim to make the process of providing information to the AI as seamless and intuitive as possible.
Open input: This pattern involves providing open-ended prompt fields where users can interact with the AI using natural language.1 In a reading companion, this could manifest as a simple text field where users can type any question or request related to the text they are currently reading. This allows for flexible and natural interaction with the AI, catering to a wide range of user needs and questions that might arise during the reading process. Users should feel empowered to ask whatever comes to mind related to their reading material, and an open input field facilitates this unrestricted form of inquiry.
Inline action: This pattern allows users to interact with the AI based on the existing content displayed on the page.1 This can significantly streamline the interaction process within a reading companion. For example, when a user highlights a specific word or phrase within the text, a context menu could appear offering AI actions directly related to that highlighted content, such as "Explain this word," "Translate this phrase," or "Find similar concepts in the text." Inline actions enhance efficiency by making AI functionalities directly accessible within the user's current reading flow, minimizing the need to switch contexts or navigate to separate AI interfaces. This brings the AI assistance directly to the point of need, making the interaction more fluid and less disruptive.
Summary: This pattern involves using AI to condense a topic or resource to its essential points.1 This functionality can be particularly valuable in a reading companion. Users could be allowed to generate summaries of entire chapters, specific sections, or even just a highlighted passage. AI-powered summarization can be a valuable tool for readers to quickly grasp the main points of a text, efficiently review previously read material, or save time when dealing with lengthy documents. It provides a shortcut to understanding the core content without having to reread entire sections.
Synthesis: Synthesis goes beyond simple summarization by having the AI distill or reorganize complex information into a more simplified structure.1 In a reading companion, this could involve asking the AI to create a mind map or outline of a chapter's key arguments, visually representing the relationships between different concepts. Another application could be having the AI identify and list the main characters and their relationships in a novel, providing a structured overview of the narrative structure. Synthesis actively restructures information, which can be particularly helpful for understanding intricate relationships and hierarchical structures within a text, offering a deeper level of comprehension than a simple summary.
Auto Fill: This pattern enables users to easily apply a prompt to multiple inputs simultaneously.1 While less directly applicable to a reading companion focused on a single text, this could be relevant in scenarios where a user is comparing multiple texts or applying the same annotation or query across a collection of documents.
Remix / Blend: This pattern allows users to combine prompts or different sources of information to generate new results.1 This could be applicable in a reading companion if the application allows users to integrate their own notes and annotations with AI analysis of the main text, enabling a more personalized and insightful interaction.
Token layering: This pattern involves constructing prompts using raw tokens.1 This is generally more relevant for advanced users or developers who are interacting directly with the underlying AI model and is less likely to be a primary user-facing input method in a typical reading companion.
3.3. Tuners
Tuner patterns provide users with the ability to refine or modify their prompts and the AI's output to achieve more precise and relevant results.1 This level of control is essential for ensuring that the AI effectively meets the user's specific needs.
Filters: These patterns enable users to constrain AI inputs or outputs based on various criteria, such as the source of information or the desired modality of the response.1 In a reading companion, filters could allow users to focus AI explanations on specific aspects of the text. For example, a user might want to filter an explanation to focus solely on the historical context of a passage, rather than its literary devices. If the AI has the capability to access external information, filters could also allow users to specify the types of sources the AI should consider, such as academic articles or news reports. By providing these filters, users gain greater control over the AI's output, ensuring that the information they receive is highly relevant and tailored to their specific learning objectives or areas of interest.
Parameters: This pattern involves including specific constraints within the prompt itself, which the AI then references during its generation process.1 In a reading companion, parameters could allow users to specify the desired length or complexity of an AI-generated summary. For instance, a user might prompt the AI to "Summarize this chapter in three concise bullet points." Similarly, users could set the tone of an AI explanation, such as "Explain this complex concept in simple terms suitable for a beginner." These parameters empower users to fine-tune the AI's output to match their comprehension level, time constraints, and specific learning goals, leading to a more personalized and effective learning experience.
Model management: This pattern gives users the option to choose which AI model is used to process their prompts.1 This could be relevant if the reading companion integrates with multiple specialized AI models, each optimized for different tasks such as summarization, question answering, or language translation. Allowing users to select the model gives them more control over the AI's performance and the expected type of output.
Inpainting: This pattern allows users to target specific areas of AI-generated content for regeneration or remixing.1 This is generally more applicable to image or video generation and is less directly relevant to a text-based reading companion.
Primary sources: This pattern enables users to provide the AI with specific references that it should use to anchor its response.1 This could be applicable in a reading companion if users have the ability to integrate external documents, notes, or other resources that they want the AI to consider when generating explanations or summaries related to the main text.
Personal voice: This pattern ensures that AI outputs match the user's desired tone or style.1 This could be relevant for AI-generated annotations or explanations within the reading companion, allowing users to customize the AI's communication style to better suit their preferences.
References: This pattern involves showing users the sources that the AI used to generate its response.1 This is crucial for transparency and building trust in the AI's output and is closely related to the "Citations" pattern under the "Governors" category.
Workflows: This pattern involves stringing together multiple AI steps to automate more complex processes.1 In a reading companion, this could allow users to create automated workflows such as automatically summarizing each chapter they read and adding the summary to their notes, or extracting key terms and creating flashcards. These workflows can automate repetitive tasks and unlock more sophisticated AI-powered features, enhancing the overall productivity and learning experience for the user.
3.4. Governors
Governor patterns focus on maintaining user agency and control while the AI is working, allowing users to understand and direct the AI's logic and output.1 These patterns are essential for preventing the AI from feeling like an uncontrollable "black box."
Controls: These patterns allow users to manage the flow of information or pause a request in order to adjust the prompt.1 In a reading companion, this could involve providing a clear "stop" button when the AI is generating a lengthy summary or explanation, giving the user the ability to interrupt the process if needed. Additionally, the application could allow users to adjust their initial prompt mid-generation if they realize they need to refine their request for a more accurate or relevant response. Providing these controls ensures that users feel in command of the AI and prevents the experience from feeling overwhelming or opaque.
Regenerate: This pattern allows the AI to produce a new response to the same prompt without requiring any additional input from the user.1 In a reading companion, if a user is not satisfied with the initial AI-generated summary or explanation, they could simply click a "regenerate" button to receive a different version of the output. This ability to regenerate responses allows for exploration and can help users find an output that better meets their specific needs or preferences, acknowledging that the first AI response might not always be the most suitable.
Citations: This pattern involves enabling the AI to provide inline annotations or footnotes to cite the sources of the information it uses.1 In a reading companion, if the AI provides an explanation that draws upon external knowledge or makes specific claims, it should clearly cite the sources of that information. Providing citations significantly enhances the trustworthiness and credibility of AI-generated content. It allows users to easily verify the sources and understand the basis of the AI's reasoning, promoting a more informed and critical engagement with the AI's output.
Footprints: This pattern allows users to trace the AI's steps from the initial prompt to the final result.1 This could be particularly relevant for more complex AI functionalities within a reading companion, such as showing the reasoning process behind a particular analysis or the steps involved in generating a summary. Making the AI's process more transparent can increase user understanding and trust.
Prompt transparency: This pattern involves showing users what is happening behind the scenes when their prompt is being processed.1 This could involve displaying the processed version of the prompt or showing intermediate steps the AI is taking to generate a response.
Sample response: This pattern is useful for confirming user intent when dealing with complex or ambiguous prompts.1 The AI might provide a sample of the expected response to ensure it has correctly understood the user's request before proceeding with the full generation.
Show the work: This pattern involves having the AI outline the steps it will take to respond to a prompt before actually executing them.1 This can be particularly helpful for more complex queries, giving the user a preview of the AI's approach and increasing their confidence in the final output.
Token transparency: This pattern involves revealing the tokens used by the AI in processing a prompt or generating a response.1 This is generally more relevant for developers or advanced users who have a deeper understanding of how large language models work.
Variations: This pattern involves presenting multiple distinct result options to the user for a single prompt.1 This is similar to the "Regenerate" pattern but focuses on offering several different interpretations or outputs at once, allowing the user to choose the one that best fits their needs.
3.5. Trust indicators
Trust indicator patterns are designed to build user confidence in the AI's results by ensuring they are perceived as ethical, accurate, and trustworthy.1 This is paramount for the successful adoption and integration of AI features in any application.
Disclosure: This pattern involves clearly marking any content or interactions that are guided or directly delivered by AI.1 In a reading companion, this could involve clearly labeling AI-generated summaries, explanations, or suggestions with a distinct icon, a specific color, or accompanying text indicating that the content was produced by AI. Transparency about the use of AI is crucial for building trust and managing user expectations. Users need to be able to easily distinguish between content generated by AI and human-created content or features within the application. Hiding the fact that AI is involved can lead to mistrust and potentially unrealistic expectations about the AI's capabilities and limitations.
Incognito mode: This pattern allows users to interact with the AI without leaving any record of their interactions.1 This can be important for privacy-conscious users who may be exploring sensitive topics or simply prefer not to have their AI interactions tracked.
Memory: This pattern gives users control over what details the AI remembers about them and their interactions.1 This is crucial for user privacy and data control. In a reading companion, users might want to control whether the AI remembers their reading history, their notes, or their previous queries. Providing clear controls over this "memory" can significantly enhance user trust and comfort.
Watermarks: This pattern involves including unique identifiers on AI-generated content that can be read by humans or software.1 While less directly applicable to text-based features within a reading companion, this could be relevant if the AI is used to generate visual aids or other media related to the reading material.
3.6. Dark matter
Dark matter patterns highlight potentially problematic or ambiguous design patterns that, despite possibly offering questionable user value, could negatively impact user trust in the long run.1 Awareness of these patterns is crucial for responsible AI implementation.
Data ownership: This pattern emphasizes the importance of giving users control over how the AI model remembers and utilizes their data.1 In the context of a reading companion, this means clearly communicating how user data, such as highlighted text, notes, and prompts, is used by the AI features. Furthermore, users should be provided with granular control over their data, including the ability to delete it or opt out of having it used for model training or personalization. Addressing data privacy and ownership concerns is paramount for maintaining user trust, especially when integrating AI that learns from user interactions.
Rating: This pattern involves allowing users to provide feedback on the AI's output, signaling any expectation gaps or errors in the model's performance.1 In a reading companion, this could be implemented through a simple feedback mechanism, such as thumbs up or thumbs down buttons, allowing users to rate the helpfulness or accuracy of AI-generated summaries, explanations, or suggestions. User feedback is invaluable for identifying areas where the AI integration can be improved and for continuously refining the AI model's performance and accuracy. It also provides users with a sense of agency and contribution to the development process.
Caveat: This pattern involves informing users about the inherent limitations or potential risks associated with the AI model or the technology itself.1 In a reading companion, this could involve clearly stating that AI-generated summaries might not capture all the nuances and subtleties of the original text, or that AI explanations should be critically evaluated and not taken as definitive truth. Setting realistic expectations about the capabilities and limitations of the AI is crucial for avoiding user frustration and maintaining trust. Overpromising what the AI can do can lead to disappointment, whereas clearly communicating limitations helps users understand when and how to best utilize the AI features.
3.7. Identifiers
Identifier patterns help to visually and functionally differentiate AI features from other parts of the application and emphasize their specific purpose.1 This ensures that users can easily recognize and understand when they are interacting with AI-powered functionalities.
Color scheme: This pattern involves using distinct visual cues, such as a specific color or set of colors, to help users recognize AI features or content within the interface.1 In a reading companion, AI-generated text or elements could be highlighted with a unique color to clearly distinguish them from the original text or user-generated notes. Clear visual differentiation helps users quickly identify and understand which parts of the application or content are AI-powered, improving overall clarity and usability.
Disclosure: (As discussed in Trust Indicators, clearly marking AI-driven content serves as an identifier as well).
Initial CTA: This pattern involves providing a prominent and clear call to action when introducing a new AI feature, encouraging users to start their first interaction.1 This could be a large, open-ended input field with a suggestion like "Ask me anything about this book."
Name: This pattern involves carefully considering how the AI should be referred to within the application.1 The name chosen can influence user perception and interaction with the AI. It should align with the application's overall brand and the intended personality of the AI.
Personality: This pattern involves defining specific characteristics that distinguish the AI's persona.1 This requires careful consideration to ensure the AI's persona aligns with the application's brand, user expectations, and the overall user experience goals. The personality should enhance, not detract from, the core reading experience.
Symbols: This pattern involves using specific icons or images to represent the AI within the interface.1 In a reading companion, a unique icon could be used to indicate AI-powered features, suggestions, or responses, providing a consistent visual cue for users.
4. Key Considerations for Integration
Integrating AI UX patterns into a reading companion requires careful consideration of ethical implications, data privacy, and responsible AI implementation.1 The insights from the "Dark matter" category underscore the importance of transparency and user control over data. It is crucial to clearly communicate how user data is utilized by AI features and to provide users with mechanisms to manage their data and preferences.1 Furthermore, the potential challenges of AI integration, such as ensuring the accuracy and reliability of AI-generated content and mitigating potential biases in the AI model, must be addressed proactively. The integration should strive for a seamless blending of AI features with the existing reading experience, enhancing functionality without disrupting the user's flow or overwhelming them with unnecessary complexity. Successful AI integration in a reading companion demands a holistic approach that prioritizes not only advanced features but also user trust, ethical considerations, and a cohesive and intuitive user experience.
Table 1: Mapping AI UX Patterns to Reading Companion Functionalities
Category of UX Pattern
Specific UX Pattern
Definition
Potential Application in a Reading Companion
Key Considerations/Insights
Wayfinders
Nudges
Alerting users to potential AI actions they can take.
Gently suggesting AI summarization of a long chapter; highlighting an "Explain this concept" button.
Should be context-aware and non-intrusive, offering genuine assistance at relevant moments.
Wayfinders
Suggestions
Offering prompts or ideas to overcome the "blank canvas" problem.
Suggesting prompts like "Summarize this" when text is highlighted; providing a list of potential AI actions when an AI feature is opened.
Lowers the barrier to entry for using AI features and encourages exploration of capabilities.
Wayfinders
Follow up
Prompting the user for more information if the initial request is unclear.
If a user asks to "explain," the AI could ask, "Could you please specify which part?"
Crucial for natural language interactions to ensure accurate understanding and response.
Wayfinders
Templates
Providing structured formats for user input or AI-generated output.
Offering templates for AI-assisted summaries (e.g., focusing on a key theme); providing a template for sentiment analysis of a passage.
Provides structure and guidance for more complex AI interactions, making them more accessible.
Inputs
Open input
Providing open-ended prompt fields for natural language interactions.
A text field where users can type any question or request related to the reading material.
Allows for flexible and natural interaction, catering to a wide range of user needs.
Inputs
Inline action
Allowing users to interact with AI based on existing content on the page.
Offering options like "Explain this word" or "Translate this phrase" when a user highlights text.
Streamlines interaction by making AI functionalities directly accessible within the reading flow.
Inputs
Summary
Using AI to condense a topic or resource to its essence.
Allowing users to generate summaries of chapters, sections, or highlighted passages.
Valuable for quickly grasping main points, reviewing information, and saving time.
Inputs
Synthesis
Having AI distill or reorganize complex information into a simpler structure.
Asking AI to create a mind map of a chapter's arguments or list main characters and their relationships in a novel.
Helps in understanding complex relationships and hierarchical structures within a text beyond simple summarization.
Tuners
Filters
Enabling users to constrain AI inputs or outputs by various criteria.
Allowing users to filter AI explanations to focus on specific aspects of the text (e.g., historical context).
Provides greater control over AI output, ensuring relevance and tailoring to specific needs.
Tuners
Parameters
Including specific constraints within the prompt for the AI to reference.
Allowing users to specify the desired length or complexity of a summary or the tone of an explanation.
Empowers users to fine-tune AI output to match their comprehension level and learning objectives.
Tuners
Workflows
Stringing together multiple AI steps for automated processes.
Allowing users to create a workflow that automatically summarizes each chapter and adds it to their notes.
Automates repetitive tasks and creates more sophisticated AI-powered features, enhancing productivity.
Governors
Controls
Allowing users to manage the flow of information or pause a request.
Providing a "stop" button for long AI processes; allowing users to adjust prompts mid-generation.
Ensures users feel in command of the AI and prevents overwhelming experiences.
Governors
Regenerate
Allowing the AI to produce a new response to the same prompt.
If a user is not satisfied with the initial summary, they can regenerate it.
Allows for exploration and helps users find an output that better meets their needs.
Governors
Citations
Enabling the AI to provide inline annotations to cite its sources.
If the AI provides an explanation drawing on external knowledge, it should cite the sources.
Enhances the trustworthiness and credibility of AI-generated information.
Trust indicators
Disclosure
Clearly marking content and interactions that are guided or delivered by AI.
Clearly labeling AI-generated summaries, explanations, or suggestions with a distinct icon or text.
Crucial for building trust and managing user expectations by ensuring transparency.
Dark matter
Data ownership
Giving users control over how the model remembers and uses their data.
Clearly communicating how user data is used and providing controls over data management.
Paramount for maintaining user trust, especially with AI that learns from user interactions.
Dark matter
Rating
Allowing users to signal expectation gaps or errors in the model.
Providing a feedback mechanism (e.g., thumbs up/down) for AI-generated responses.
Invaluable for identifying areas for improvement and continuously refining AI performance.
Dark matter
Caveat
Informing users about limitations or risks associated with the model.
Clearly stating that AI summaries might not capture all nuances or that AI explanations should be critically evaluated.
Sets realistic expectations and helps users understand when and how to best utilize AI features.
Identifiers
Color scheme
Using visual cues to help users recognize AI features or content.
Using a distinct color to highlight AI-generated text or elements.
Helps users quickly identify and understand AI-powered parts of the application.
Identifiers
Symbols
Using images to represent the AI within the interface.
Using a specific icon to indicate AI-powered features or suggestions.
Provides a consistent visual cue for AI functionalities.

5. Conclusion
The integration of AI into a reading companion application holds significant potential to enhance the user's reading and learning experience. By thoughtfully applying the user-centered AI design principles embodied in the UX patterns from the "Designer's Guide to Building AI Products," developers can create more intuitive, efficient, and engaging reading tools. The framework of Wayfinders, Inputs, Tuners, Governors, Trust indicators, awareness of Dark matter, and Identifiers provides a practical roadmap for strategically incorporating AI functionalities. The analysis reveals numerous opportunities to leverage AI for tasks such as providing contextual explanations, generating summaries, synthesizing complex information, and personalizing the reading experience. However, successful integration hinges on a commitment to transparency, user control, and ethical considerations, as highlighted by the Dark matter patterns. By prioritizing user trust and carefully addressing potential limitations, developers can harness the power of AI to create reading companions that truly empower and enrich the lives of their users.
Works cited
The Shape of AI | UX Patterns for Artificial Intelligence Design, accessed May 13, 2025, https://www.shapeof.ai/#home-results
